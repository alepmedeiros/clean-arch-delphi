unit Financial.UseCase.WithdrawMoney;

interface

uses
  Financial.Repository.Interfaces, Financial.Entities.Withdraw;

type
  TWithdrawMoney = class
  private
    FFinancialRepository: iFinancialRepository;
    procedure Validade(const aWithdraw);
  public
    constructor Create(FinancialRepository: iFinancialRepository);
    procedure Execute(const aValue: Double);
  end;

implementation

{ TWithdrawMoney }

constructor TWithdrawMoney.Create(FinancialRepository: iFinancialRepository);
begin
  FFinancialRepository := FinancialRepository;
end;

procedure TWithdrawMoney.Execute(const aValue: Double);
var
  lWithdraw : TWithdraw;
begin
  lWithdraw := TWithdraw.Create;
  try

  finally
    lWithdraw.DisposeOf;
  end;
end;

procedure TWithdrawMoney.Validade(const aWithdraw);
begin

end;

end.
