unit Financial.Gateway.Impl;

interface

uses
  Financial.Gateway.Interfaces;

type
  TGateway = class(TInterfacedObject, iGateway)
    private
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iGateway;
      procedure Execute(const aCommand: String);
      function GetValue(const aCommand: String) : Variant;
  end;

implementation

constructor TGateway.Create;
begin

end;

destructor TGateway.Destroy;
begin

  inherited;
end;

procedure TGateway.Execute(const aCommand: String);
begin

end;

function TGateway.GetValue(const aCommand: String): Variant;
begin

end;

class function TGateway.New : iGateway;
begin
  Result := Self.Create;
end;

end.
